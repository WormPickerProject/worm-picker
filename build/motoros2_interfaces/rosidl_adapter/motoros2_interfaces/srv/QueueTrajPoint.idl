// generated from rosidl_adapter/resource/srv.idl.em
// with input from motoros2_interfaces/srv/QueueTrajPoint.srv
// generated code does not contain a copyright notice

#include "motoros2_interfaces/msg/QueueResultEnum.idl"
#include "trajectory_msgs/msg/JointTrajectoryPoint.idl"

module motoros2_interfaces {
  module srv {
    @verbatim (language="comment", text=
      "SPDX-FileCopyrightText: 2022-2023, Yaskawa America, Inc." "\n"
      "SPDX-FileCopyrightText: 2022-2023, Delft University of Technology" "\n"
      "" "\n"
      "SPDX-License-Identifier: Apache-2.0")
    struct QueueTrajPoint_Request {
      @verbatim (language="comment", text=
        "Submit a trajectory point to the continuous motion queue." "\n"
        "" "\n"
        "The start_point_queue_mode service must have been invoked first")
      sequence<string> joint_names;

      trajectory_msgs::msg::JointTrajectoryPoint point;
    };
    @verbatim (language="comment", text=
      "Result of the service invocation. Values other than one (1) signal failure." "\n"
      "" "\n"
      "Refer to QueueResultEnum.msg for defined values" "\n"
      "" "\n"
      "NOTE: future versions of this service may use a different set of result codes")
    struct QueueTrajPoint_Response {
      motoros2_interfaces::msg::QueueResultEnum result_code;

      @verbatim (language="comment", text=
        "string representation of the value in 'result_code', for humans")
      string message;
    };
  };
};
