// generated from rosidl_adapter/resource/srv.idl.em
// with input from motoros2_interfaces/srv/WriteSingleIO.srv
// generated code does not contain a copyright notice


module motoros2_interfaces {
  module srv {
    @verbatim (language="comment", text=
      "SPDX-FileCopyrightText: 2022-2023, Yaskawa America, Inc." "\n"
      "SPDX-FileCopyrightText: 2022-2023, Delft University of Technology" "\n"
      "" "\n"
      "SPDX-License-Identifier: Apache-2.0")
    struct WriteSingleIO_Request {
      @verbatim (language="comment", text=
        "Write 'value' to the IO element at 'address'." "\n"
        "" "\n"
        "This service does not return anything." "\n"
        "" "\n"
        "Addresses are plain, base-10 integers, as used and displayed by the controller" "\n"
        "(on the teach pendant for instance)." "\n"
        "" "\n"
        "Only the following addresses can be written to:" "\n"
        "" "\n"
        " - 27010 and up : Network Inputs (25010 and up on DX100 and FS100)" "\n"
        " - 10010 and up : Universal/General Outputs" "\n"
        "" "\n"
        "Refer also the Yaskawa Motoman documentation on IO addressing and" "\n"
        "configuration.")
      uint32 address;

      int32 value;
    };
    @verbatim (language="comment", text=
      "legal values defined in IoResultCodes.msg")
    struct WriteSingleIO_Response {
      uint32 result_code;

      string message;

      boolean success;
    };
  };
};
