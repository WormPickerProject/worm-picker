// generated from rosidl_adapter/resource/srv.idl.em
// with input from motoros2_interfaces/srv/ReadGroupIO.srv
// generated code does not contain a copyright notice


module motoros2_interfaces {
  module srv {
    @verbatim (language="comment", text=
      "SPDX-FileCopyrightText: 2022-2023, Yaskawa America, Inc." "\n"
      "SPDX-FileCopyrightText: 2022-2023, Delft University of Technology" "\n"
      "" "\n"
      "SPDX-License-Identifier: Apache-2.0")
    struct ReadGroupIO_Request {
      @verbatim (language="comment", text=
        "Read (and return) the current value of the Group IO element at 'address'." "\n"
        "" "\n"
        "Addresses are plain, base-10 integers, as used and displayed by the controller" "\n"
        "(on the teach pendant for instance)." "\n"
        "" "\n"
        "There are no restrictions as to which group IO elements can be read, but they" "\n"
        "have to exist on the controller and be configured correctly." "\n"
        "" "\n"
        "NOTE: many programming languages will parse literals starting with '0' as" "\n"
        "      octal numbers. Do not add leading zeros to group addresses to avoid" "\n"
        "      specifying the wrong address to read." "\n"
        "" "\n"
        "Refer also the Yaskawa Motoman documentation on IO addressing and" "\n"
        "configuration.")
      uint32 address;
    };
    @verbatim (language="comment", text=
      "legal values defined in IoResultCodes.msg")
    struct ReadGroupIO_Response {
      uint32 result_code;

      string message;

      boolean success;

      uint8 value;
    };
  };
};
