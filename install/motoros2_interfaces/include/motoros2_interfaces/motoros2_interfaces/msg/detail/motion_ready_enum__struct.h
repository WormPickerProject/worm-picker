// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from motoros2_interfaces:msg/MotionReadyEnum.idl
// generated code does not contain a copyright notice

#ifndef MOTOROS2_INTERFACES__MSG__DETAIL__MOTION_READY_ENUM__STRUCT_H_
#define MOTOROS2_INTERFACES__MSG__DETAIL__MOTION_READY_ENUM__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'READY'.
/**
  * Result codes which may be returned by services and actions which attempt to
  * execute motion (or are executing motion).
  *
  * Values other than 1 would indicate an active error or other active inhibition
  * on the Yaskawa controller preventing MotoROS2 from enabling trajectory mode
  * or executing any motion.
  *
  * Applications are encouraged to refer to the named constants generated by
  * rosidl as part of this message instead of using the integer values directly.
 */
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__READY = 1
};

/// Constant 'READY_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__READY_STR = "Ready";

/// Constant 'NOT_READY_UNSPECIFIED'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_UNSPECIFIED = 100
};

/// Constant 'NOT_READY_UNSPECIFIED_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_UNSPECIFIED_STR = "Unspecified";

/// Constant 'NOT_READY_ALARM'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ALARM = 101
};

/// Constant 'NOT_READY_ALARM_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ALARM_STR = "The controller has an active Alarm";

/// Constant 'NOT_READY_ERROR'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ERROR = 102
};

/// Constant 'NOT_READY_ERROR_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ERROR_STR = "The controller has an active Error";

/// Constant 'NOT_READY_ESTOP'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ESTOP = 103
};

/// Constant 'NOT_READY_ESTOP_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ESTOP_STR = "The controller is in E-Stop";

/// Constant 'NOT_READY_NOT_PLAY'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_PLAY = 104
};

/// Constant 'NOT_READY_NOT_PLAY_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_PLAY_STR = "The teach pendant must not be in TEACH mode";

/// Constant 'NOT_READY_NOT_REMOTE'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_REMOTE = 105
};

/// Constant 'NOT_READY_NOT_REMOTE_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_REMOTE_STR = "The teach pendant must be in REMOTE mode";

/// Constant 'NOT_READY_SERVO_OFF'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_SERVO_OFF = 106
};

/// Constant 'NOT_READY_SERVO_OFF_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_SERVO_OFF_STR = "Servo power is OFF. Please call start_traj_mode or start_point_queue_mode service";

/// Constant 'NOT_READY_HOLD'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_HOLD = 107
};

/// Constant 'NOT_READY_HOLD_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_HOLD_STR = "The controller is in HOLD";

/// Constant 'NOT_READY_JOB_NOT_STARTED'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_JOB_NOT_STARTED = 108
};

/// Constant 'NOT_READY_JOB_NOT_STARTED_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_JOB_NOT_STARTED_STR = "The INIT_ROS job has not started. Please call start_traj_mode or start_point_queue_mode service";

/// Constant 'NOT_READY_NOT_ON_WAIT_CMD'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_ON_WAIT_CMD = 109
};

/// Constant 'NOT_READY_NOT_ON_WAIT_CMD_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_ON_WAIT_CMD_STR = "INFORM job is not on a WAIT command. Check the format of INIT_ROS";

/// Constant 'NOT_READY_PFL_ACTIVE'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_PFL_ACTIVE = 111
};

/// Constant 'NOT_READY_PFL_ACTIVE_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_PFL_ACTIVE_STR = "A PFL event has occurred. Please return the robot to a safe state";

/// Constant 'NOT_READY_INC_MOVE_ERROR'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_INC_MOVE_ERROR = 112
};

/// Constant 'NOT_READY_INC_MOVE_ERROR_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_INC_MOVE_ERROR_STR = "The controller is in an error state. Please call reset_error to attempt to clear the error";

/// Constant 'NOT_READY_OTHER_PROGRAM_RUNNING'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_OTHER_PROGRAM_RUNNING = 113
};

/// Constant 'NOT_READY_OTHER_PROGRAM_RUNNING_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_OTHER_PROGRAM_RUNNING_STR = "Controller is running another job";

/// Constant 'NOT_READY_OTHER_TRAJ_MODE_ACTIVE'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_OTHER_TRAJ_MODE_ACTIVE = 114
};

/// Constant 'NOT_READY_OTHER_TRAJ_MODE_ACTIVE_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_OTHER_TRAJ_MODE_ACTIVE_STR = "Another trajectory mode is already active. Please call stop_traj_mode service";

/// Constant 'NOT_READY_NOT_CONT_CYCLE_MODE'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_CONT_CYCLE_MODE = 115
};

/// Constant 'NOT_READY_NOT_CONT_CYCLE_MODE_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_NOT_CONT_CYCLE_MODE_STR = "AUTO cycle mode not set. Please set the cycle mode to AUTO";

/// Constant 'NOT_READY_MAJOR_ALARM'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_MAJOR_ALARM = 116
};

/// Constant 'NOT_READY_MAJOR_ALARM_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_MAJOR_ALARM_STR = "Major Alarms can't be reset. Please check the teach pendant";

/// Constant 'NOT_READY_ECO_MODE'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ECO_MODE = 117
};

/// Constant 'NOT_READY_ECO_MODE_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_ECO_MODE_STR = "Couldn't disable eco mode";

/// Constant 'NOT_READY_SERVO_ON_TIMEOUT'.
enum
{
  motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_SERVO_ON_TIMEOUT = 118
};

/// Constant 'NOT_READY_SERVO_ON_TIMEOUT_STR'.
static const char * const motoros2_interfaces__msg__MotionReadyEnum__NOT_READY_SERVO_ON_TIMEOUT_STR = "Timed out while waiting for servo on";

/// Struct defined in msg/MotionReadyEnum in the package motoros2_interfaces.
/**
  * SPDX-FileCopyrightText: 2022-2023, Yaskawa America, Inc.
  * SPDX-FileCopyrightText: 2022-2023, Delft University of Technology
  *
  * SPDX-License-Identifier: Apache-2.0
 */
typedef struct motoros2_interfaces__msg__MotionReadyEnum
{
  uint16_t value;
} motoros2_interfaces__msg__MotionReadyEnum;

// Struct for a sequence of motoros2_interfaces__msg__MotionReadyEnum.
typedef struct motoros2_interfaces__msg__MotionReadyEnum__Sequence
{
  motoros2_interfaces__msg__MotionReadyEnum * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} motoros2_interfaces__msg__MotionReadyEnum__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // MOTOROS2_INTERFACES__MSG__DETAIL__MOTION_READY_ENUM__STRUCT_H_
