// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from motoros2_interfaces:msg/SelectionResultCodes.idl
// generated code does not contain a copyright notice

#ifndef MOTOROS2_INTERFACES__MSG__DETAIL__SELECTION_RESULT_CODES__STRUCT_H_
#define MOTOROS2_INTERFACES__MSG__DETAIL__SELECTION_RESULT_CODES__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'OK'.
/**
  * Result codes which may be returned by services and actions which attempt to
  * select a configuration or setting.
  *
  * Values other than 0 would indicate an active error or other active inhibition
  * on the Yaskawa controller preventing MotoROS2 from processing the service
  * request.
  *
  * Applications are encouraged to refer to the named constants generated by
  * rosidl as part of this message instead of using the integer values directly.
 */
enum
{
  motoros2_interfaces__msg__SelectionResultCodes__OK = 0ul
};

/// Constant 'OK_STR'.
static const char * const motoros2_interfaces__msg__SelectionResultCodes__OK_STR = "";

/// Constant 'INVALID_CONTROLLER_STATE'.
enum
{
  motoros2_interfaces__msg__SelectionResultCodes__INVALID_CONTROLLER_STATE = 400ul
};

/// Constant 'INVALID_CONTROLLER_STATE_STR'.
static const char * const motoros2_interfaces__msg__SelectionResultCodes__INVALID_CONTROLLER_STATE_STR = "Pendant is not in REMOTE mode";

/// Constant 'INVALID_CONTROL_GROUP'.
enum
{
  motoros2_interfaces__msg__SelectionResultCodes__INVALID_CONTROL_GROUP = 401ul
};

/// Constant 'INVALID_CONTROL_GROUP_STR'.
static const char * const motoros2_interfaces__msg__SelectionResultCodes__INVALID_CONTROL_GROUP_STR = "Invalid control group";

/// Constant 'INVALID_SELECTION_INDEX'.
enum
{
  motoros2_interfaces__msg__SelectionResultCodes__INVALID_SELECTION_INDEX = 402ul
};

/// Constant 'INVALID_SELECTION_INDEX_STR'.
static const char * const motoros2_interfaces__msg__SelectionResultCodes__INVALID_SELECTION_INDEX_STR = "Invalid tool selection";

/// Struct defined in msg/SelectionResultCodes in the package motoros2_interfaces.
/**
  * SPDX-FileCopyrightText: 2022-2023, Yaskawa America, Inc.
  * SPDX-FileCopyrightText: 2022-2023, Delft University of Technology
  *
  * SPDX-License-Identifier: Apache-2.0
 */
typedef struct motoros2_interfaces__msg__SelectionResultCodes
{
  uint32_t value;
} motoros2_interfaces__msg__SelectionResultCodes;

// Struct for a sequence of motoros2_interfaces__msg__SelectionResultCodes.
typedef struct motoros2_interfaces__msg__SelectionResultCodes__Sequence
{
  motoros2_interfaces__msg__SelectionResultCodes * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} motoros2_interfaces__msg__SelectionResultCodes__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // MOTOROS2_INTERFACES__MSG__DETAIL__SELECTION_RESULT_CODES__STRUCT_H_
