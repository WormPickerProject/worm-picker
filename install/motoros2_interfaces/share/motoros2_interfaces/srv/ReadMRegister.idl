// generated from rosidl_adapter/resource/srv.idl.em
// with input from motoros2_interfaces/srv/ReadMRegister.srv
// generated code does not contain a copyright notice


module motoros2_interfaces {
  module srv {
    @verbatim (language="comment", text=
      "SPDX-FileCopyrightText: 2022-2023, Yaskawa America, Inc." "\n"
      "SPDX-FileCopyrightText: 2022-2023, Delft University of Technology" "\n"
      "" "\n"
      "SPDX-License-Identifier: Apache-2.0")
    struct ReadMRegister_Request {
      @verbatim (language="comment", text=
        "Read (and return) the current value of the M register at 'address'." "\n"
        "" "\n"
        "Addresses are plain, base-10 integers, as used and displayed by the controller" "\n"
        "(on the teach pendant for instance)." "\n"
        "" "\n"
        "Only the following addresses can be read from:" "\n"
        "" "\n"
        " - 0 to 999" "\n"
        "" "\n"
        "NOTE 1: do not add 1000000 to the address, MotoROS will do this when" "\n"
        "        necessary." "\n"
        "" "\n"
        "NOTE 2: many programming languages will parse literals starting with '0' as" "\n"
        "        octal numbers. Do not add leading zeros to register addresses to avoid" "\n"
        "        specifying the wrong register to read." "\n"
        "" "\n"
        "Refer also the Yaskawa Motoman documentation on IO addressing and" "\n"
        "configuration.")
      uint32 address;
    };
    @verbatim (language="comment", text=
      "legal values defined in IoResultCodes.msg")
    struct ReadMRegister_Response {
      uint32 result_code;

      string message;

      boolean success;

      uint16 value;
    };
  };
};
